name: Cache Dependencies

on:
  workflow_dispatch: # manually trigger workflow
  pull_request_target: # merge pr with main
    types: [ closed ]
    branches: [ main ]

jobs:
  root_node_modules: 
    name: Root node_modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Remove "version" from the root and "" package block, then compute SHA256 hash
      # Because we bump root package.json and dont want to lose existing valid caches
      - name: Compute hash after modifying package-lock.json
        run: |
          HASH=$(jq 'del(.version) | del(.packages[""].version)' package-lock.json | sha256sum | awk '{ print $1 }')
          echo "Computed Hash: $HASH"
          echo "HASH=$HASH" >> $GITHUB_ENV

      - name: Cache node_modules
        uses: actions/cache@v3
        id: root-node-modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-root-node-modules-${{ env.HASH }}
        
      # Just install packages at root, skips postinstalll scripts with --ignore-scripts flag
      # We install and cache client/svr modules separately
      - run: npm ci --ignore-scripts
        if: steps.root-node-modules-cache.outputs.cache-hit != 'true'

  client_npm_modules:
    name: Client node_modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v3
        id: client-node-modules-cache
        with:
          path: ./client/node_modules
          key: ${{ runner.os }}-client-node-modules-${{ hashFiles('client/package-lock.json') }}
        
      - run: cd client && npm ci
        if: steps.client-node-modules-cache.outputs.cache-hit != 'true'

  svr_npm_modules:
    name: Server node_modules
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache node_modules
        uses: actions/cache@v3
        id: svr-node-modules-cache
        with:
          path: ./svr/node_modules
          key: ${{ runner.os }}-svr-node-modules-${{ hashFiles('svr/package-lock.json') }}
        
      - run: cd svr && npm ci
        if: steps.svr-node-modules-cache.outputs.cache-hit != 'true'

  playwright:
    name: Playwright
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get installed Playwright version
        run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').packages['node_modules/@playwright/test'].version)")" >> $GITHUB_ENV

      - name: Cache Playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
          lookup-only: true # does not restore cache

      - name: Install Playwright Browsers
        if: steps.playwright-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium
        
  # docker_images: